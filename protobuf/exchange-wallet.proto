syntax = "proto3";
option go_package = "./protobuf/exchange-wallet-go";
package syncs;

enum ReturnCode{
  ERROR = 0;
  SUCCESS = 1;
}

/*EOA 账户热钱包公钥*/
message PublicKey{
  string type = 1;
  string public_key = 2;
}

/*EOA 热钱包地址*/
message Address{
  string type = 1;
  string address = 2;
}

/*代币*/
message Token{
  uint32 decimals = 1;
  string address = 2;
  string token_name = 3;
  string collect_amount = 4;
  string cold_amount = 5;
}

/*项目方注册请求*/
message BusinessRegisterRequest{
  string consumer_token = 1;
  string request_id = 2;
  string notify_url = 3;
}

/*项目方注册响应*/
message BusinessRegisterResponse{
  ReturnCode code = 1;
  string msg = 2;
}

/*地址导出请求*/
message ExportAddressRequest{
  string consumer_token = 1;
  string request_id = 2;
  repeated PublicKey public_keys = 3;
}

/*地址导出响应*/
message ExportAddressResponse{
  ReturnCode code = 1;
  string msg = 2;
  repeated Address addresses = 3;
}

/*创建未签名交易*/
message UnSignTransactionRequest{
  string consumer_token = 1;
  string request_id = 2;
  string chain_id = 3;
  string chain = 4;
  string from = 5;
  string to = 6;
  string value = 7;
  string contract_address = 8;
  string token_id = 9;
  string token_meta = 10;
  string tx_type = 11;
}

/*未签名交易响应*/
message UnSignTransactionResponse{
  ReturnCode code = 1;
  string msg = 2;
  string transaction_id =3;
  string un_sign_tx = 4;
}

/*已签名交易请求*/
message SignedTransactionRequest{
  string consumer_token = 1;
  string request_id = 2;
  string chain = 3;
  string chain_id = 4;
  string transaction_id = 5;
  string signature = 6;
  string tx_type = 7;
}

/*已签名交易响应*/
message SignedTransactionResponse{
  ReturnCode code = 1;
  string msg = 2;
  string signed_tx = 3;
}

message SetTokenAddressRequest{
  string request_id = 1;
  repeated Token token_list = 2;
}

message SetTokenAddressResponse{
  ReturnCode code = 1;
  string msg = 2;
}

service WalletBusinessServices{
  /*业务方注册*/
  rpc businessRegister(BusinessRegisterRequest) returns (BusinessRegisterResponse);
  /*地址导出*/
  rpc exportAddressByPublicKeys(ExportAddressRequest) returns (ExportAddressResponse);
  /*构建未签名交易*/
  rpc buildUnSignTransaction(UnSignTransactionRequest) returns (UnSignTransactionResponse);
  /*构建已签名交易*/
  rpc buildSignedTransaction(SignedTransactionRequest) returns (SignedTransactionResponse);
  /*设置 token 地址*/
  rpc setTokenAddress(SetTokenAddressRequest) returns (SetTokenAddressResponse);
}



